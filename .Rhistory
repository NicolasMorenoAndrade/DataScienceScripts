1
plot(hClustering)
set.seed(1234)
par(mar=c(0,0,0,0))
x <- rnorm(12, mean=rep(c(1,2,3),each=4), sd=0.2)
y <- rnorm(12, mean=rep(c(1,2,1),each=4), sd=0.2)
print(plot(x,y, col="blue",pch=19,cex=2))
text(x+0.05, y+0.05, labels=as.character(1:12))
dev.off()
dataFrame <- data.frame(x=x,y=y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
myplclust <- function(hclust, lab=hclust$labels,
lab.col=rep(1,length(hclust$labels)),
hang=0.1,...){
y <- rep(hclust$height,2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- x[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot( hclust, labels=FALSE, hang=hang, ... )
text( x=x, y=y[hclust$order]-(max(hclust$height)*hang),
labels=lab[hclust$order],
col=lab.col[hclust$order],
srt=90, adj=c(1,0.5), xpd=NA, ... )
}
myplclust(hClustering, lab=rep(1:3, each=4),
lab.col = rep(1:3, each=4))
dataFrame <- data.frame(x=x,y=y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
heatmap(dataMatrix)
source('~/Desktop/DataScience/Scripts/hierarchicalClustering.R')
set.seed(1234)
par(mar=c(0,0,0,0))
x <- rnorm(12, mean=rep(c(1,2,3),each=4), sd=0.2)
y <- rnorm(12, mean=rep(c(1,2,1),each=4), sd=0.2)
print(plot(x,y, col="blue",pch=19,cex=2))
text(x+0.05, y+0.05, labels=as.character(1:12))
dev.off()
dataFrame <- data.frame(x=x,y=y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
myplclust <- function(hclust, lab=hclust$labels,
lab.col=rep(1,length(hclust$labels)),
hang=0.1,...){
y <- rep(hclust$height,2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- x[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot( hclust, labels=FALSE, hang=hang, ... )
text( x=x, y=y[hclust$order]-(max(hclust$height)*hang),
labels=lab[hclust$order],
col=lab.col[hclust$order],
srt=90, adj=c(1,0.5), xpd=NA, ... )
}
set.seed(1234)
par(mar=c(0,0,0,0))
x <- rnorm(12, mean=rep(c(1,2,3),each=4), sd=0.2)
y <- rnorm(12, mean=rep(c(1,2,1),each=4), sd=0.2)
print(plot(x,y, col="blue",pch=19,cex=2))
text(x+0.05, y+0.05, labels=as.character(1:12))
dataFrame <- data.frame(x=x,y=y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
dev.off()
plot(hClustering)
par(mar=c(0,0,0,0))
plot(hClustering)
dev.off()
plot(hClustering)
set.seed(1234)
par(mar=c(0,0,0,0))
x <- rnorm(12, mean=rep(c(1,2,3),each=4), sd=0.2)
y <- rnorm(12, mean=rep(c(1,2,1),each=4), sd=0.2)
print(plot(x,y, col="blue",pch=19,cex=2))
text(x+0.05, y+0.05, labels=as.character(1:12))
dataFrame <- data.frame(x=x,y=y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
myplclust <- function(hclust, lab=hclust$labels,
lab.col=rep(1,length(hclust$labels)),
hang=0.1,...){
y <- rep(hclust$height,2)
x <- as.numeric(hclust$merge)
y <- y[which(x<0)]
x <- x[which(x<0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot( hclust, labels=FALSE, hang=hang, ... )
text( x=x, y=y[hclust$order]-(max(hclust$height)*hang),
labels=lab[hclust$order],
col=lab.col[hclust$order],
srt=90, adj=c(1,0.5), xpd=NA, ... )
}
myplclust(hClustering, lab=rep(1:3, each=4),
lab.col = rep(1:3, each=4))
dataFrame <- data.frame(x=x,y=y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
heatmap(dataMatrix)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col="red")
5
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
source('~/Documents/Ignacio/lechuga/graficasexloratorias.R')
source('~/Documents/Ignacio/lechuga/graficasexloratorias.R')
View(promediosPE)
View(promedio)
library(reshape2)
library(ggplot2)
?melt
c("T", "DDS")
class(c("T", "DDS"))
class(1:10)
melt(promedio, id.vars = c("T", "DDS"))
promediosmelt <- melt(promedio, id.vars = c("T", "DDS"))
levels(promediosmelt$variable)
df <- filter(promediosmelt, variable=="meanafol")
?filter
library(dplyr)
df <- filter(promediosmelt, variable=="meanafol")
View(df)
afolplot <- ggplot(data = df, aes(x=DDS, y=meanafol), color=factor(T))
ggplot(data = df, aes(x=DDS, y=meanafol), color=factor(T))
ggplot(data = df, aes(x=DDS, y=value), color=factor(T))
ggplot(data = df, aes(x=DDS, y=value), color=factor(T)) + geom_line()
ggplot(data = df, aes(x=DDS, y=value), color=T) + geom_line()
ggplot(data = df, aes(x=DDS, y=value), colour=T) + geom_line()
ggplot(data = df, aes(x=DDS, y=value), colour=as.factor(as.character(T)) + geom_line()
ggplot(data = df, aes(x=DDS, y=value), colour=as.factor(as.character(T))) + geom_line()
ggplot(data = df, aes(x=DDS, y=value), colour=as.factor(as.character(T))) + geom_line()
ggplot(data = df, aes(x=DDS, y=value, colour=as.factor(as.character(T)))) + geom_line()
ggplot(data = df, aes(x=DDS, y=value, colour=as.factor(as.character(T)))) + geom_line() +
ylab("Área foliar (cm^2)")
ggplot(data = df, aes(x=DDS, y=value, colour=as.factor(as.character(T)))) + geom_line() +
ylab("Área foliar (cm^2)") + xlab("Días después de siembra")
ggplot(data = df, aes(x=DDS, y=value, colour=as.factor(as.character(T)))) + geom_line() +
ylab("Área foliar (cm^2)") + xlab("Días después de siembra") + theme(legend.title = "Tratamiento")
ggplot(data = df, aes(x=DDS, y=value, colour=as.factor(as.character(T)))) + geom_line() +
ylab("Área foliar (cm^2)") + xlab("Días después de siembra") +
theme(legend.title = element_text("Tratamiento"))
ggplot(data = df, aes(x=DDS, y=value, colour=as.factor(as.character(T)))) + geom_line() +
ylab("Área foliar (cm^2)") + xlab("Días después de siembra") +
scale_color_discrete(name="Tratamiento")
ggplot(data = df, aes(x=DDS, y=value, colour=as.factor(as.character(T)))) + geom_line() +
ylab("Área foliar (cm^2)") + xlab("Días después de siembra") +
scale_color_discrete(name="Tratamiento", breaks=c("1", "2", "3"),
labels=c("PolUV", "Control", "Polcom"))
source('~/Documents/Ignacio/lechuga/graficasexloratorias.R')
afoliarplot <- ggplot(data = df, aes(x=DDS, y=value, colour=as.factor(as.character(T)))) + geom_line() +
ylab("Área foliar (cm^2)") + xlab("Días después de siembra") +
scale_color_discrete(name="Tratamiento", breaks=c("1", "2", "3"),
labels=c("PolUV", "Control", "Polcom"))
afoliarplot
source('~/Documents/Ignacio/lechuga/graficasexloratorias.R')
View(promediopigmentos)
df <- melt(promediopigmentos, id.vars = c("T"))
View(df)
pigmentosbars <- ggplot(data=df, aes(x=T, y=value, fill=variable)) +
geom_bar(stat="identity", position=position_dodge(), colour="black")
print(pigmentosbars)
View(promedio)
df <- filter(promediosmelt, variable %in% c("meanFvFm","meanYII"))
df <- filter(promediosmelt, variable=="meanFvFm")
FvFmbars <- ggplot(data=df, aes(x=T, y=value, fill=DDS)) +
geom_bar(stat="identity", position=position_dodge(), colour="black")
print(FvFmbars)
FvFmbars <- ggplot(data=df, aes(x=T, y=value, fill=as.factor(DDS))) +
geom_bar(stat="identity", position=position_dodge(), colour="black")
print(FvFmbars)
FvFmbars <- ggplot(data=df, aes(x=T, y=value, fill=as.factor(DDS))) +
geom_bar(stat="identity", position=position_dodge(), colour="black")
+ scale_y_continuous(limits = c(0.65,0.9))
print(FvFmbars)
FvFmbars <- ggplot(data=df, aes(x=T, y=value, fill=as.factor(DDS))) +
geom_bar(stat="identity", position=position_dodge(), colour="black")
+ scale_y_continuous(limits = NA)
print(FvFmbars)
FvFmbars <- ggplot(data=df, aes(x=T, y=value, fill=as.factor(DDS))) +
geom_bar(stat="identity", position=position_dodge(), colour="black")
+ coord_cartesian(ylim=c(0.65, 0.9))
print(FvFmbars)
FvFmbars <- ggplot(data=df, aes(x=T, y=value, fill=as.factor(DDS))) +
geom_bar(stat="identity", position=position_dodge(), colour="black") + coord_cartesian(ylim=c(0.65, 0.9))
print(FvFmbars)
FvFmbars <- ggplot(data=df, aes(x=T, y=value, fill=as.factor(DDS))) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
coord_cartesian(ylim=c(0.65, 0.9))
print(FvFmbars)
FvFmbars <- ggplot(data=df, aes(x=T, y=value, fill=as.factor(DDS))) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
coord_cartesian(ylim=c(0.75, 0.85))
print(FvFmbars)
load("~/Documents/Ignacio/lechuga/noRawdfs.RData")
View(verdosidad)
View(HojasConRGR)
qqnorm(HojasConRGR$fv.fm)
fvfmresults = lm(fv.fm ~ DDS + T + DDS*T, data=HojasConRGR)
anova(results)
anova(fvfmresults)
HojasConRGR$T <- as.factor(HojasConRGR$T)
HojasConRGR$DDS <- as.factor(HojasConRGR$DDS)
fvfmresults = lm(fv.fm ~ DDS + T + DDS*T, data=HojasConRGR)
anova(fvfmresults)
onewayfvfm = lm(fv.fm ~ T, data=HojasConRGR)
anova(fvfmresults)
anova(onewayfvfm)
onewayfvfm = aov(fv.fm ~ T, data=HojasConRGR)
aov(fv.fm ~ T, data=HojasConRGR)
anova(aov(fv.fm ~ T, data=HojasConRGR))
obj <- aov(fv.fm ~ T, data=HojasConRGR)
anova(obj)
print(obj)
if(R.version$os=="linux-gnu"){
load("~/Documents/Ignacio/lechuga/noRawdfs.RData")
} else if (R.version$os=="darwin15.6.0"){
load("~/Documents/Biologia/Tesis/dataAnalysis/noRawdfs.RData")
}
qqnorm(HojasConRGR$fv.fm)
HojasConRGR$T <- as.factor(HojasConRGR$T)
HojasConRGR$DDS <- as.factor(HojasConRGR$DDS)
fvfmresults = lm(fv.fm ~ DDS + T + DDS*T, data=HojasConRGR)
?TukeyHSD
TukeyHSD(obj)
obj <- aov(fv.fm ~ DDS, data=HojasConRGR)
TukeyHSD(obj)
source('~/Documents/Ignacio/lechuga/graficasexloratorias.R')
?->
?`->'
?assign
swirl()
library(swirl)
swirl()
cmat
points(cx,cy,col=c( "red", "orange", "purple"), pch=3, cex=2,lwd=2)
play()
body(mdist)
formals(mdist)
body(mdist)
nxt()
mdist(cx,cy)
nxt()
mdist(x,y,cx,cy)
swirl()
swirl()
swirl()
cmat
points(cx,cy,col=c( "red", "orange", "purple"), pch=3, cex=2,lwd=2)
mdist(x,y,cx,cy)
distTmp <- mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
cols1 <- c("red","orange","purple")
points(x,y,pch=19, cex=2, col=cols1[newClust]
)
points(x,y,pch=19, cex=2, col=cols1[newClust])
tapply(x,newClust,mean)
points(x,y,pch=19, cex=2, col=cols1[newClust]
tapply(y,newClust,mean)
tapply(y,newClust,mean)
source('~/Desktop/DataScience/Scripts/K-means.R')
View(datosRaw2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19, cex=2, col=cols1[newClust2])
tapply(x,newClust,mean)
tapply(x,newClust2,mean)
newCy <- tapply(y,newClust,mean)
newCy <- tapply(y,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,pch=9, cex=2, lwd=2,col=cols1)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
load(file="~/Desktop/DataScience/Scripts/data/kmeansSwirl.RData")
save(cmat, cx, cy, dataFrame, file="~/Desktop/DataScience/Scripts/data/kmeansSwirl.RData")
load("~/Desktop/DataScience/Scripts/data/kmeansSwirl.RData")
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y, col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"), pch=3, cex=3, lwd=3)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=6)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=3)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=3)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=3)$cluster,pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,centers=3)$cluster,pch=19,cex=2)
rm(list=ls())
load("~/Desktop/DataScience/Scripts/data/kmeansSwirl.RData")
points(cx,cy,col=c( "red", "orange", "purple"), pch=3, cex=2,lwd=2)
points(cx,cy,col=c( "red", "orange", "purple"), pch=3, cex=2,lwd=2)
plot.new()
points(cx,cy,col=c( "red", "orange", "purple"), pch=3, cex=2,lwd=2)
dataFrame$x -> x
dataFrame$y -> y
mdist <- function(x,y,cx,cy)
{
distTmp <- matrix(NA, nrow = 3, ncol = 12)
distTmp[1, ] <- (x - cx[1])^2 + (y - cy[1])^2
distTmp[2, ] <- (x - cx[2])^2 + (y - cy[2])^2
distTmp[3, ] <- (x - cx[3])^2 + (y - cy[3])^2
return(distTmp)
}
distTmp <- mdist(x,y,cx,cy)
newClust <- apply(distTmp,2,which.min)
cols1 <- c("red","orange","purple")
points(x,y,pch=19, cex=2, col=cols1[newClust])
newCx <- tapply(x,newClust,mean)
load("~/Desktop/DataScience/Scripts/data/kmeansSwirl.RData")
plot.new()
points(cx,cy,col=c( "red", "orange", "purple"), pch=3, cex=2,lwd=2)
points(cx,cy,col=c( "red", "orange", "purple"), pch=3, cex=2,lwd=2)
plot(x,y)
points(cx,cy,col=c( "red", "orange", "purple"), pch=3, cex=2,lwd=2)
View(dataFrame)
plot(y,x)
plot.new()
plot(y,x)
plot.new()
plot(y,x)
points(cx,cy,col=c( "red", "orange", "purple"), pch=3, cex=2,lwd=2)
load("~/Desktop/DataScience/Scripts/data/kmeansSwirl.RData")
dataFrame$x -> x
dataFrame$y -> y
plot.new()
plot(y,x)
points(cx,cy,col=c( "red", "orange", "purple"), pch=3, cex=2,lwd=2)
mdist <- function(x,y,cx,cy)
{
distTmp <- matrix(NA, nrow = 3, ncol = 12)
distTmp[1, ] <- (x - cx[1])^2 + (y - cy[1])^2
distTmp[2, ] <- (x - cx[2])^2 + (y - cy[2])^2
distTmp[3, ] <- (x - cx[3])^2 + (y - cy[3])^2
return(distTmp)
}
distTmp <- mdist(x,y,cx,cy)
newClust <- apply(distTmp,2,which.min)
cols1 <- c("red","orange","purple")
points(x,y,pch=19, cex=2, col=cols1[newClust])
newCx <- tapply(x,newClust,mean)
newCy <- tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
distTmp2 <- mdist(x,y,newCx,newCy)
newClust2 <- apply(distTmp2,2,which.min)
points(x,y,pch=19, cex=2, col=cols1[newClust2])
finalCx <- tapply(x,newClust,mean)
finalCy <- tapply(y,newClust,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
points(y,x)
plot.new()
points(y,x)
points(cx,cy,col=c( "red", "orange", "purple"), pch=3, cex=2,lwd=2)
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% matv
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
(svd1$u[,1]*svd1$d[1])%*%svd1$d[,1]
(svd1$u[,1]*svd1$d[1])%*%t(svd1$d[,1])
(svd1$u[,1]*svd1$d[,1])%*%t(svd1$d[,1])
(svd1$u[,1]*svd1$d[1])%*%t(svd1$d[,1])
(svd1$u[,1]*svd1$d[1])%*%t(svd1$d[,1])
(svd1$u[,1]*svd1$d[1])%*%t(svd1$v[,1])
play()
all.equal(tmp, svd1)
tmp <- svd(faceData)
all.equal(tmp, svd1)
identical(tmp, svd1)
tmp <- svd(scale(faceData))
identical(tmp, svd1)
nxt()
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
play()
myImage
nxt()
myImage(a1)
a1 <- (svd1$u[,1:2] %*% svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
rm(list=ls())
swirl()
swirl()
library(swirl)
swirl()
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1[,1:12])
myedit( "showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,"maxCon")])
mdist <- dist(cbind(sub1[,c(10:12],maxCon))
mdist <- dist(cbind(sub1[,10:12],maxCon))
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[laying,1:12], pch=19, ylab = "Walkdown Cluster")
plot(kClust$centers[walkdown,1:12], pch=19, ylab = "Walkdown Cluster")
source('~/Desktop/DataScience/Scripts/humanActivity.R')
rm(list=ls())
load("./data/samsungData.rda")
names(samsungData)
table(samsungData)
table(samsungData$activity)
search()
